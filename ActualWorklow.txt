This is essentially a REFACTORING Excercise.

High Level Worfklow:
====================
1. We need to apply a suite of Tests to the initial code, to give some coverage, and see where things will break before we refactor.
2. Once we have tests we can refactor, taking into account code smells, and SOLID principles.
3. We need to apply Triangulation when refactoring, creating new code (RED-GREEN-REFACTOR)
4. Test should use AAA framework (Arrange-Act-Assert)
5. Code checkins to have comments to show work flow, and highlight refactorings and code smells.
6. Follow "boyscout" principle.

I have decided to use BDD and TDD testing, using:
-SpecFlow (BDD)
-NUnit and RhinoMocks - (TDD)

Tests for gaining code coverage, will follow a Horizontal Slice, i.e. BDD => TDD for each test.